JSP파일은 컴파일해야 서블릿으로 변경된다.

버퍼 라이트로 전송할 때 포스트로 보내면 ㅐ값을 보여준다

method가 post 이니까 ? -> doPost가 실행될것

get은 데이터를 요청할 때 구체적인 요청을해야 값을 받을수 있다.
이를 쿼리 스트링이라 한다.

아이디 패스워드를 받아서 DB에서 정상적인 사용자라고 확인되면
열쇠를 하나 만들어서 사용자에게 준다 (헤더에서 쿠키 라는곳에 열쇠를 담아서 준다)
브라우저는 응답을 받으면 헤더부터 전체적으로 검사한다, 만약 헤더에 쿠키가 있으면
쿠키를 브라우저 저장소에 담아준다. 이후 요청시 마다 쿠키를 달아서 요청한다. 그러면 다음번 요청때
열쇠를 들고있는 사용자의 요청이라면 별도의 인증없이 데이터를 준다.

세션이란
특정한 클라이언트에서 서버로 요청을 보냈다면 서버는 이 클라이언트가 보낸 요청에 함께
존재하는 그 클라이언트의 정보를 가지고 있다가 다시 그 클라이언트로부터 또 다른 요청이 왔을 때는
이미 가지고 있던 정보를 비교해서 동일한 브라우저인지를 판단하게 되는 것입니다.
이렇게 서버가 자신에게 접속한 클라이언트의 정보를 갖고 있는 상태를 '세션' 이라고 합니다.

쿠키란
쿠키는 세션과 달리 서버에 클라이언트를 담아두지않고, 클라이언트 자신들에게 그 정보를 저장하게
합니다. 그래서 이후에 서버로 전송되는 요청에는 쿠키가 담아둔 정보를 포함해 전송이되면,
요청 속에 포함되어 있을 쿠키를 읽어서 새로운 클라이언트인지, 이전에 요청을 해온 클라이언트인지
판단할 수 있게 됩니다.

브라우저에 주소를 적고 request를 한다 (get)
서버에서 톰캣이 byte stream을 통해 들어온 정돈되지 않은 문자를 파싱하고 정리해서
request와 response를 만들어준다. 
request에는 바디,헤더 정보가 담겨있고  response에는 응답해야할 데이터가 담겨있다.


JSESSION
톰캣이 자동으로 각 클라이언트에게 설정해주는 ID 입니다. 새로운 클라이언트가 연결 될 때 마다,
서버는 새로운 스레드를 생성합니다. 웹소켓 통신과 매우 유사한 방식입니다.
모든 최초 요청(request)시 세션 저장소를 생성함, stateful ? pool? 상태가 되게 해준다.
서버는 세션을가지고있고 클라이언트는 쿠키를 가지고있다.
서버는 세션저장소에서 클라이언트 한명마다세션 영역을 하나씩 갖고있다. (table row)
request , response는 클라이언트가 요청하고 응답시에만 만들어졌다가 그 후에는 사라진다.

브라우저 --Byte Stream(request)---> 서버



status
100 - 기다려
200 - 성공
300 - 
400 - 클라이언트오류
500 - 서버오류